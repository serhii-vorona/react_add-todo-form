{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","isCompleted","completed","id","title","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","updatedTodos","setUpdatedTodos","hasTitleError","setHasTitleError","hasSelectedError","setHasSelectedError","onSubmit","event","preventDefault","isValidated","selectedUserId","newTodo","length","addTodo","type","value","placeholder","onChange","target","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd94c642.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const isCompleted = todo.completed\n    ? 'TodoInfo TodoInfo--completed'\n    : 'TodoInfo';\n\n  return (\n    <article className={isCompleted} data-id={todo.id}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) || null,\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [updatedTodos, setUpdatedTodos] = useState([...todos]);\n  const [hasTitleError, setHasTitleError] = useState(true);\n  const [hasSelectedError, setHasSelectedError] = useState(true);\n\n  const addTodo = () => {\n    const selectedUserId = usersFromServer\n      .find(user => user.name === selectedUser)?.id;\n\n    if (selectedUserId) {\n      const newTodo = {\n        id: updatedTodos.length + 1,\n        title,\n        userId: selectedUserId,\n        completed: false,\n        user: usersFromServer.find(user => user.id === selectedUserId) || null,\n      };\n\n      setUpdatedTodos([...updatedTodos, newTodo]);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    let isValidated = false;\n\n    if (title && selectedUser) {\n      setHasTitleError(true);\n      setHasSelectedError(true);\n      isValidated = true;\n    } else {\n      setHasTitleError(false);\n      setHasSelectedError(false);\n      isValidated = false;\n    }\n\n    if (isValidated) {\n      addTodo();\n      setTitle('');\n      setSelectedUser('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          value={title}\n          placeholder=\"Enter a title\"\n          data-cy=\"titleInput\"\n          onChange={event => {\n            setHasTitleError(true);\n\n            setTitle(event.target.value\n              .replace(/[^a-zA-Zа-яА-Я0-9 ]/g, ''));\n          }}\n\n        />\n\n        <span className=\"error\">\n          {!hasTitleError && 'Please enter a title'}\n        </span>\n        <br />\n\n        <select\n          name=\"users\"\n          data-cy=\"userSelect\"\n          onChange={event => {\n            setSelectedUser(event.target.value);\n            setHasSelectedError(true);\n          }}\n        >\n          <option value=\"\">\n            Choose a user\n          </option>\n          {usersFromServer.map(user => (\n            <option value={user.name} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n        <span className=\"error\">\n          {!hasSelectedError && 'Please choose a user'}\n        </span>\n        <br />\n        <button type=\"submit\">Add task</button>\n      </form>\n      <TodoList todos={updatedTodos} />\n    </div>\n  );\n};\n\nexport default App;\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}